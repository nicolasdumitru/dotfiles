#!/bin/zsh

# Config for zsh interactive shells

# Plugin configurations
. "${ZDOTDIR:-${XDG_CONFIG_HOME:-$HOME/.config}/zsh}"/plugin-config/zsh-syntax-highlighting

# Enable completion features
autoload -Uz compinit
compinit -d "${XDG_CACHE_HOME:-$HOME/.cache}"/zcompdump
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# Shell builitin commands help
autoload run-help
HELPDIR=/usr/share/zsh/"${ZSH_VERSION}"/help

# ZSH-specific settings
# change directory just by typing its name
setopt autocd
# allow comments in interactive mode
setopt interactivecomments
# enable filename expansion for arguments of the form ‘anything=expression’
setopt magicequalsubst
# report the status of background jobs immediately
setopt notify
# sort filenames numerically when it makes sense
setopt numericglobsort
# command substitution in the prompt
setopt promptsubst

# Prompt configuration
# configure a colored prompt
configure_prompt() {
	PROMPT=$'%B%F{%(#.white.white)}┌──(%F{%(#.red.red)}%n@%m%F{%(#.white.white)})%b-%B[%F{reset}%(6~.%-1~/…/%4~.%5~)%F{%(#.white.white)}]\n└──%(#.%F{red}( # %).%F{white}(%F{red} $ %F{white}%))%b%F{reset} '

	RPROMPT=$'%(?.. %? %F{red}%Bx%b%F{reset})%(1j. %j %F{yellow}%B⚙%b%F{reset}.)'
}

configure_prompt

# set a colorless prompt (only uncomment the next line if necessary)
# PROMPT='$%n@%m:%~%# '

# print a new line before the prompt, but only if it is not the first line
precmd() {
	if [ -z "$NEW_LINE_BEFORE_PROMPT" ]; then
		NEW_LINE_BEFORE_PROMPT=1
	else
		command echo
	fi
}

# hide EOL sign ('%')
PROMPT_EOL_MARK=""

# Remove delay when entering normal mode (vi)
KEYTIMEOUT=5

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ $KEYMAP == vicmd ]] || [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ $KEYMAP == main ]] || [[ $KEYMAP == viins ]] || [[ $KEYMAP = '' ]] || [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select

# Start with beam shape cursor on zsh startup and after every command.
zle-line-init() { zle-keymap-select 'beam'}

# use beam shape cursor on startup
command echo -ne '\e[5 q'

# use beam shape cursor for each new prompt
preexec() {
	command echo -ne '\e[5 q'
}

# ZSH-specific variables
# don't consider certain characters part of the word
WORDCHARS=${WORDCHARS//\/}

# configure `time` format
TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S\ncpu\t%P'

# History configuration
# delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_expire_dups_first
# ignore duplicated commands history list
setopt hist_ignore_dups
# ignore commands that start with space
setopt hist_ignore_space
# show command with history expansion to user before running it
setopt hist_verify
# share command history data
setopt share_history

mkdir -p "${XDG_STATE_HOME:-$HOME/.local/state}"
HISTFILE="${XDG_STATE_HOME:-$HOME/.local/state}/zsh-history"
HISTSIZE=10000000
SAVEHIST=20000000

# Builtin command help
alias help=run-help

# Show the complete history
alias history="history 0"

# This is redundant (see zshenv), but necessary for nix-env
export SHELL="${__SHELL}"

# Load aliases
. "${XDG_CONFIG_HOME:-$HOME/.config}"/shell/aliasrc

# Load functions
. "${XDG_CONFIG_HOME:-$HOME/.config}"/shell/functionrc

# Load keybindings
. "${XDG_CONFIG_HOME:-$HOME/.config}"/zsh/keybindingrc
